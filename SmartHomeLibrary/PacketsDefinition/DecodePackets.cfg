[DecodePackets]
# 0xf0 - Bootloader - Clear Device Program
Item1 = Request_$$_f0 'C' 'l' 'e' 'a' 'r' 'P' 'r' 'o' 'g' 'r' 'a' 'm' _$$_F0 - Bootloader: Clear device program
Item2 = Answer_$$_f0 ? _$$_F0 - Bootloader: Clear device program: [1:if_else:ff:==:0:no error:ERROR]

# 0xf1 - Bootloader - Erase Device Memory
Item3 = Request_$$_f1 ? ? ? ? ? ? ? _$$_F1 - Bootloader: Clear devicke memory: number of packets: [1:hi_lo_16], date: 20[3:dec]-[4:dec]-[5:dec] [6:dec]:[7:dec]
Item4 = Answer_$$_f1 ? ? ? _$$_F1 - Bootloader: Clear device memory: [1:if_else:ff:==:0:no error:ERROR], wait: [2:hi_lo_16] * 50ms

# 0xf2 - Bootloader - Check Is Clear Device Memory
Item5 = Request_$$_f2 _$$_F2 - Bootloader: Check is clear device memory
Item6 = Answer_$$_f2 ? _$$_F2 - Bootloader: Check is clear device memory: [1:if_else:ff:==:0:no error:ERROR]

# 0xf3 - Bootloader - Send Packet To Device
Item7 = Request_$$_f3 ? ? ? ? (1-256) _$$_F3 - Bootloader: Send packet to device: number of packet to send: [1:hi_lo_16], data packet length: [3:hi_lo_16]

# 0xf4 - Bootloader - Get Not Resolved Packets List In Device - first 20
Item8 = Request_$$_f4 _$$_F4 - Bootloader: Get not resolved packets list in device
Item9 = Answer_$$_f4 (1-31) _$$_F4 - Bootloader: Get not resolved packets list in device: number of packets: [1:dec]

# 0xf5 - Bootloader - End Device Programming
Item10 = Request_$$_f5 ? ? ? ? _$$_F5 - Bootloader: End device programming, CRC32: 0x[1:hex][2:hex][3:hex][4:hex]
Item11 = Answer_$$_f5 ? _$$_F5 - Bootloader: End device programming: [1:if_else:ff:==:0:no error:ERROR]

# 0xf9 - Bootloader - Set device hardware id, address and regenerate flash encryption key
Item12 = Request_$$_f9 ? ? ? ? ? ? ? ? _$$_F9 - Bootloader: Set device hardware id, address and regenerate flash encryption key, hardware type1: [7:dec], hardware type2: [8:dec], hardware type count: [9:dec], hardware version: [10:dec], new address: [11:hex_hi_lo_32]
Item13 = Answer_$$_f9 ? _$$_F9 - Bootloader: Set device hardware id, address and regenerate flash encryption key: [1:if_else:ff:==:0:no error:ERROR]


# 0xfa - Get Device Address
Item14 = Request_$$_fa ? _$$_FA - Get device address, type: [1:dec]
Item15 = Answer_$$_fa ? ? ? ? ? ? ? ? _$$_FA - Get device address: [1:hex_hi_lo_32] hardware type1: [5:dec], hardware type 2: [6:dec], hardware type count: [7:dec], hardware version: [8:dec]

# 0xfb - Get Direct Mode
Item16 = Request_$$_fb _$$_FB - Get Direct mode
Item17 = Answer_$$_fb ? ? _$$_FB - Get Direct mode [2:if_else:ff:==:0:off:on]

# 0xfb - Set Direct Mode
Item18 = Request_$$_fb ? _$$_FB - Set Direct mode [1:if_else:ff:==:0:off:on]
Item19 = Answer_$$_fb ? _$$_FB - Set Direct mode [1:if_else:ff:==:0:no error:ERROR]

# 0xfc - Get Flash Memory
Item20 = Request_$$_fc ? ? ? ? ? ? _$$_FC - Get flash memory, address: [1:hex_hi_lo_32], length: [5:hi_lo_16]
Item21 = Answer_$$_fc ? (1-256) _$$_FC - Get flash memory

# 0xff - Reset
Item22 = Request_$$_ff [0,1] _$$_'R' - Reset [5:if_else:ff:==:0:normal:delayed]
Item23 = Answer_$$_ff ? _$$_ff - Reset [1:if_else:ff:==:0:no error:ERROR]


# 'v' - Version
Item24 = Request_$$_'v' _$$_'v' - Get version
Item25 = Answer_$$_'v' ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? _$$_'v' - Get version: program programmed: 20[1:dec2]-[2:dec2]-[3:dec2] [4:dec2]:[5:dec2], program: 20[6:dec2]-[7:dec2]-[8:dec2] [9:dec].[10:dec2], bootloader: 20[11:dec2]-[12:dec2]-[13:dec2], bootloader: [14:dec].[15:dec], hardware type1: [16:dec], hardware type 2: [17:dec], hardware type count: [18:dec], hardware version: [19:dec], uptime: [20:hi_lo_32] s, vin: [24:hi_lo_16] mV, run: [26:if_else:ff:==:'p':program:][26:if_else:ff:==:'b':bootloeader:]

# 'S' - Synchronize
Item26 = Request_$$_'S' ? ? ? ? ? ? ? ? ?_$$_S - Synchronize 20[1:dec]-[2:dec2]-[3:dec2] [5:dec]:[6:dec2]:[7:dec2].[8:hi_lo_16], day [4:dec]
Item27 = Answer_$$_'S' ? _$$_S - Synchronize [1:if_else:ff:==:0:no error:ERROR]

# 'p' - Ping
Item28 = Request_$$_'p' (0-255)_$$_p - ping
Item29 = Answer_$$_'p' (0-255)_$$_p - ping

# 't' - Get Temperature 2
Item30 = Request_$$_'t'_$$_t - Get temperature
Item31 = Answer_$$_'t' ? ? ? ? ? ? ? ? ? ? ?_$$_t - Get temperature uptime: [1:hi_lo_32] s, vin: [5:hi_lo_16] mV, [7:dec]: [8:hex_hi_lo_16] [10:hex_hi_lo_16]

# 't' - Get Temperature 4
Item32 = Answer_$$_'t' ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?_$$_t - Get temperature, uptime: [1:hi_lo_32] s, vin: [5:hi_lo_16] mV, [7:dec]: [8:hex_hi_lo_16] [10:hex_hi_lo_16] [12:hex_hi_lo_16] [14:hex_hi_lo_16]

# 'r' - Get Relays Status 2
Item33 = Request_$$_'r'_$$_r - Get relays status
Item34 = Answer_$$_'r' ? ? ? ? ? ? ? ? ?_$$_r - Get relays status uptime [1:hi_lo_32] s, vin: [5:hi_lo_16] mV, [7:dec]: [8:dec] [9:dec]

# 'r' - Set Relay State
Item35 = Request_$$_'r' ? ?_$$_r - Set relay [1:dec] = [2:bool:0]
Item36 = Answer_$$_'r' ?_$$_r - Set relay [1:if_else:ff:==:1:ok:error]

# "RTC" - Get RTC date and time (only CU)
Item37 = Request_$$_'R' 'T' 'C' 0_$$_"RTC" - Get internal RTC DS3231
Item38 = Answer_$$_'R' 'T' 'C' ? ? ? ? ? ? ? ?_$$_"RTC" - Get internal RTC DS3231, status: [3:if_else:ff:==:0:no error:ERROR], 20[4:dec]-[5:dec2]-[6:dec2] [8:dec]:[9:dec2]:[10:dec2], day [7:dec]

# 'g' - Get CU Status
Item39 = Request_$$_'g' ? ? ?_$$_g - Get CU Status, from item: [1:hi_lo_16], details: [3:dec]
Item40 = Answer_$$_'g' (0-255)_$$_g - Get CU Status

# "sREL" - Set Relay State
Item41 = Request_$$_'s' 'R' 'E' 'L' ? ? ? ? ? ?_$$_"sREL" - Set Relay State, address: [4:hex_hi_lo_32], relay: [8:dec], state: [9:dec]
Item42 = Answer_$$_'s' 'R' 'E' 'L' ?_$$_"sREL" - Set Relay State, status: [4:if_else:ff:==:0:no error:ERROR]


#   Packet definition:
# ?                           - one some byte
# (128) or (2-256)            - any array with length 128 bytes or between 2 and 256 bytes
# [2] or [2,3,4] or [2-4,7-9] - bytes list

#   Comment:
# [0:dec]                     - display byte 0
# [0:dec2]                    - display byte 0 in 2 digits
# [0:dec:0-4]                 - display byte 0 - only bits from 0 to 4
# [0:hex]                     - display byte 0 as hexadecimal
# [0:hex2]                    - display byte 0 as hexadecimal in 2 digits
# [0:hex:4-7]                 - ...
# [0:bin]                     - display byte 0 as binary
# [0:rev_bin]                 - display byte 0 as binary - revert sequence
# [0:char]                    - display byte 0 as character
# [0:if_else:7f:==:ea:s1:s2]  - if byte 0 & 0x7f == 0xea then display 's1' otherwise display 's2'
#                                   you can use: ==, !=, >, <, >=, <=
# [0:if_else:7f:==:'a':s1:s2] - if byte 0 & 0x7f == 'a' character then display 's1' otherwise display 's2'
#                                   you can use: ==, !=, >, <, >=, <=
# [0:bool:1]                  - display byte 0 bit 1
# [0:if_else:1:s1:s2]         - if byte 0 and bit 1 set display 's1', when bit 1 is unset display 's2'
# [0:hi_lo_16]                - display 16 bits data from low byte
# [0:lo_hi_16]                - display 16 bits data from high byte
# [0:hi_lo_24]                - display 24 bits data from low byte
# [0:lo_hi_24]                - display 24 bits data from high byte
# [0:hi_lo_32]                - display 32 bits data from low byte
# [0:lo_hi_32]                - display 32 bits data from high byte
# [0:hex_hi_lo_16]            - display 16 bits data from low byte in hex
# [0:hex_lo_hi_16]            - display 16 bits data from high byte in hex
# [0:hex_hi_lo_24]            - display 24 bits data from low byte in hex
# [0:hex_lo_hi_24]            - display 24 bits data from high byte in hex
# [0:hex_hi_lo_32]            - display 32 bits data from low byte in hex
# [0:hex_lo_hi_32]            - display 32 bits data from high byte in hex
